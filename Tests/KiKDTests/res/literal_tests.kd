/**
 * Test literal types
 *
 * @author Daniel Leuck
 */

# String Tests -----------------------------------

Strings {
    string1 "hello"
    string2 "hi" Abcd1234
    string3 `aloha`
    string4 bula
    string5 """
        hi there
        """
    string6 "line1\nline2"
    # note: new lines should be preserved for string7 and string8
    string7 `line1
    line2` # note: this is continued from the line above
    string8 `line1
    line2
    line3` # note: the previous two lines are continued from "string8"
    string9 `Anything should go in this line without escapes \ \\ \n \t " "" ' ''`
    string10 "escapes \"\\\n\t"

    # unicode strings - if these don't display properly download a unicode font
    # such as Bitstream Cyberbit, Code2000
    # (http://home.att.net/~jameskass/code2000_page.htm), or MS Arial
    # Unicode (http://support.microsoft.com/default.aspx?scid=kb;en-us;287247) and
    # ensure your text editor supports UTF8 encoding in values
    Japanese "Êó•Êú¨Ë™û"
    Korean "Ïó¨Î≥¥ÏÑ∏Ïöî"
    Russian "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–ª—Ç–µ"

    # KD string literals
    raw_string @"start\t\nend"
    triple_quotes1 """
    Hello friends
    """
    triple_quotes2 """
        Hello friends
    """
    triple_quotes3 """
        Hello friends
        This is the second line
    """
    triple_quotes4 """
            My friend said "hi!"
            My other friends said `bonjour!`
            My last friend said 'salama!'
            "\""Escaped triple quote"\""
    """
    tabs_and_spaces """
      My friend said "hi!"
        My other friends said `hello!`
      This is the third line
    """

    raw_string_block @"""
      My friend said "hi!"
        My other friends said `hello!`
      This is the third line
    """

    """"""
    """\""""
    """ """
    """"""""

    triple_quotes_around_quotes """
        Yell "Hi!"
        """

    double_quotes_in_string_block """
        ""Hello""
     """

    escape_double_quotes "I say \"hello\""
    escape_striple_quotes_in_string_block """
        \"""Hello\"""
    """

    escape singleQuote '\''

    YellAnotherWay `Yell "Hi!"`

    triple_quotes_raw @"""
        line1 \
        line2\nline3
        tabstart    tabend
        tab_escape_start\ttab_escape_end
    """

    # check support for UTF8 in identifiers
    Êó•Êú¨Ë™û "Japanese"
    Ïó¨Î≥¥ÏÑ∏Ïöî "Korean"
    –∑–¥—Ä–∞–≤—Å—Ç–≤—É–ª—Ç–µ "Russian"

    xml `
    <root type="widget">
        <color red="255" green="0" blue="0"/>
        <text>Hi there!</text>
    </root>
    `
    line_test `
    no new line above or below
    `
    emoji "üòÄ"
}

# Naked (quoteless) strings

nakedStrings {
	# value strings
	greeting1 Aloha
	greeting2 Aloha Bula
	greeting3 Aloha "Bula" Hola
	greeting4 "Aloha" Bula "Hola" Hi
	greeting5 Aloha Bula `Hola` "Hi"

	# attribute strings
	greeting6 hawaiian=Aloha
	greeting7 hawaiian=Aloha fijian=Bula
	greeting8 hawaiian=Aloha fijian="Bula" spanish=Hola
}


# Character Tests -----------------------------------

Characters {
    char1 'a'
    char2 'A'
    char3 '\\'
    char4 '\n'
    char5 '\t'
    char6 '\''
    char7 '"'
    char8 'Êó•'
    char9 'Ïó¨'
    char10 '–∑'
    emoji1 'üçè'
}

# Number Tests -----------------------------------

Numbers {
    int1 0
    int2 5
    int3 -100
    int4 234253532
    int_binary 0b10100001010001
    int_hex 0x0A2F
    long1 0L
    long3 5L
    long4 3904857398753453453L
    long5 3_904_857_398_753_453_453L
    float1 1.0F
    float2 .23f
    float3 -.34F
    float4 500f
    double1 2.0
    double2 -0.234
    double3 2.34
    double4 10000000d
    double5 521_789.231_834
    double_exp1 123e-5
    double_exp2 12.1e2
    decimal1 0bd
    decimal2 11.111111BD
    decimal3 143_523.521_535bd
    decimal4 234535.3453453453454345345341242343bd
    decimal5 982_342_462_234.163_932_352bd

    int_binary 0b1010000101
    int_hex 0x0A2F
}

# Boolean Tests -----------------------------------

Booleans {
    light_on true
    light_off false

    light1 on
    light2 off
}

# Null Tests -----------------------------------

Nulls {
    nothing null
    nothing2 nil
}

# Version Tests -----------------------------------

Versions {
    version1 12.0.0
    version2 5.6.2-beta-1
    version3 3-beta
    version4 4.2-alpha-3

    basic_version 12.23.5
    include_build 3.0.2
    includes_qualifier 315.24.52-beta
    # Not currently supported
    # includes_build 12.53.64.23523.alpha
}

# Date Tests -----------------------------------

Dates {
    date1 2005/12/31
    date2 1882/5/2
    date3 1882/05/02
    way_back 582/09/16
}

# Date Time Tests -----------------------------------

DateTimes {
    date_time1 2005/12/31@12:30
    date_time2 1882/5/2@12:30
    date_time3 2005/12/31@1:00
    date_time4a 1882/5/2@1:00-US/PST
    date_time4b 1882/5/2@1:00-Z
    date_time5 2005/12/31@12:30:23.12
    date_time6 1882/5/2@22:30:23.123
    date_time7 1882/5/2@10:30:23.123-JP/JST
    date_time8 985/04/11 @12:30:23.123-AU/NFT
    date_time9 1980/5/23@5:30:15.03+2
    date_time10 1980/5/23@15:30:15.03-3:30
    date_time11 1980/5/23@9:30:15.03-UTC
    date_time15 1980/5/23 @14:30:15.123_534_623-CN/CST
    date_time16 1980/5/23 @14:30:15.000_000_623-IN/IST

    # ISO 8601 extended form
    date_time_8601_1 1882-05-02T12:30:00
    date_time_8601_2 2005-12-31T01:00:00
    date_time_8601_3 2005-12-31T01:00:00Z
    date_time_8601_4 1980-5-23T05:30:15.03+02
    date_time_8601_5 1980-5-23T15:30:15.03-03:30

    2020/5/2
    2020-05-02
    2020/06/02 @9:00
    2020/7/3@10:30:23
    2020/08/04 @11:00:23.001
    2020/9/5@12:00:23.001392
    2020/10/06 @13:35:23.001_392
    2020/11/7@14:00-9:30
    2020/12/08 @15:40+9:30
    2020/1/9@16:00-Z
    2020/2/10 @17:45-Z
    2020/3/11@18:00-JP/JST
    2020/4/12 @19:50-IN/IST
}

# Duration Tests -----------------------------------
Durations {
    SimpleDurations {
        dur1 12:30:10
        dur2 24:00:00
        dur3 1:00:00
        dur4 1:0:0
        dur5 12:30:2
        dur6 -12:30:23
        dur7 12:30:23
        dur_with_days 8days:12:30:23
    }

    UnitDurations {
        days 15days
        hours 16h
        minutes 23min
        // minutes 2.5min # =30s - Fractional units are currently only supported for secs
        seconds 15s
        seconds 10.25s # =250ms
        milli 12ms
        nano 54664ns
    }

    # Using fractional seconds
    FractionalSeconds {
        dur8 12:30:23.1
        dur9 -12:30:23.12
        dur10 12days:20:23:6.123
        dur11 34days:12:30:23.1
        dur12 1day:12:30:0
        dur13 5days:12:30:23.12
        dur_frac_sec_millis -12:30:23.103 # milliseconds
        dur_frac_sec_micros -5days:12:30:23.123534 # microseconds
        dur_frac_sec_micros_with_sep -5days:12:30:23.123_534 # microseconds with _ separators
        dur_frac_sec_nanos 7days:12:30:23.123534623 # nanoseconds
        dur_frac_sec_nanos_with_sep -3days:12:30:23.123_534_623 # nanoseconds with _ separators
    }

    # Using unit durations
    UnitDurations {
        day 1day
        days 15days
        hours 16h
        minutes 23min
        seconds 15s
        seconds 10.25s # =250ms
        milli 12ms
        nano 54664ns
    }
}

# URLs -----------------------------------

URLs {
    UNSite http://www.un.org
    CERN_URL https://home.cern
    https://www.amazon.com/Wide-Angle-Quadcopter/dp/?ac_md=2-1-QmV0d2VlbiAkNTAgYW5kICQxMDA%3D-ac_d_pm&cv_ct_cx=drones
}

# Quantities

Quantities {
    3cm
    -3cm
    5.2m2
    -5.2m2
    5_000_000km¬≤
    7g
    7.5g
    7g:L
    7g:f
    7g:d
    23‚Ñì
    23LT
    18.2m‚Ñì
    18.2mL
}

# Range Tests -----------------------------------

Ranges {
    range1 1..5
    range2 4.2..<8.0
    range3 4-beta..8.0.4-alpha
    range4 2day..5day

    2016/5/2..2020/1/12

    intRange 12..15
    intOpenLeftRange _..15
    intOpenRightRange 2.5.._
    doubleRange 12.4<..15.1
    decimalRange 12.4bd<..15.1bd
    charRange 'f'..'z'
    stringRange "Bilbo".."Frodo"
    durationRange 5s..10s
    durationRange2 5days:23:01:02..8days
    dateTimeRange 1990/12/5@5:12..2000/02/5@5:23:01
    versionRanges 3.1.0.._  3.0.23-beta-2<..5.0.0
    quantityRange 5g..20g
    quantityRange2 5g..20kg

    0..5
    5..0
    0<..<5
    0..<5
    0<..5
    0.._
    _..5
    0<.._
    _..<5

    'a'..'z'
    2f<..<5.24f

    3f..6.2f
    2d..5.24
    3.4bd..205.4214bd

    2010/12/25 .. 2020/5/15

    4.3-alpha <.. _ # TODO: Question - Should this be "4.3.alpha <= _"
    5.1-beta .. 6.4.0
}

# Base64 -----------------------------------

Base64 {
    # bytes for UTF8 string "hi"
    b64Greeting .blob(SGVsbG8=)

    # bytes for a small PNG image

    png .blob(
        Qk1UAAAAAAAAAD4AAAAoAAAABQAAAAUAAAABAAEAAAAAABYAAA
        ASCwAAEgsAAAAAAAAAAAAA////AAAAAAAAkEcCcAAAAHEBAABw
        AAAAAAAAAAAA
    )
}

